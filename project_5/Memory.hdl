CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // if MSB is 0, address has to refer to RAM 
    // (b/c of the size of the address- 15 bits!
    // do the math!)
    DMux(in=load, sel=address[14], a=loadRam, b=loadScreenOrKbd);
    DMux(in=loadScreenOrKbd, sel=address[13], a=loadScreen, b=loadKbd);

    RAM16K(in=in, load=loadRam, address=address[0..13], out=ramOut);
    Screen(in=in, load=loadScreen, address=address[0..12], out=screenOut);
    Keyboard(out=kbdOut);

    // address[14] and address[13] (the two 
    // most significant bits); 00 means RAM, 
    // as does 01, since RAM is found up to memory
    // location 16383; 10 is the screen, meaning
    // that only 11 can be the keyboard (11=largest
    // possible MSBs, and kbd register is the 
    // "final" available addressable register) 
    Mux4Way16(a=ramOut, b=ramOut, c=screenOut, d=kbdOut, sel[1]=address[14], sel[0]=address[13], out=out);
}